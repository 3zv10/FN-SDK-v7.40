#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IceQueen_Glider_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass IceQueen_Glider_AnimBP.IceQueen_Glider_AnimBP_C
// 0x0B90 (0x0E60 - 0x02D0)
class UIceQueen_Glider_AnimBP_C final : public UFortGliderAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_036ECC4544D2B2C061A158AD7EFB3DD0; // 0x02D8(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_C1A4FEF14C0036473F6C4BAC15E7D128; // 0x02F8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_A249F2CC4ABA096731593EAC61DD553F; // 0x0340(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1AB85E27403FDB3735DF9E85CCAE7018; // 0x0368(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_BF8EE2924F1C46924B1F88B9C7F15DAA; // 0x0390(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1B126B4E4AA5826ABCF90EA3B3429E51; // 0x03B8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_55C1FFC1495AAE4E9C7A9EBA5A991A58; // 0x03E0(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_A44C17B747C5420618D113B928FD4215; // 0x0458(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_CA5EB3B847850C949B4431962887C8F9; // 0x04F8(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13C2928E43F08F60FBBAF9BC1ADAD2E5; // 0x0570(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5A30459A4668E41C0948F9AF2FB4A0EF; // 0x0590(0x0078)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_B1B1A1E54354E29A1645CC98E0B3962C; // 0x0608(0x0078)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_B161E5AA45ECFAE2909BA98ADD6FB3A5; // 0x0680(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_F647822745FD6D219E3780A203916161; // 0x0720(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7C6AE6664D50C5AD295EDE98F66DE9F7; // 0x0740(0x0078)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_48E3DC1348EC3057C6F356934170B9DD; // 0x07B8(0x00E0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2FF6C0244671D0A94B127EB3A3E9F2D0; // 0x0898(0x00A0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23EF744241BA9FE387B5DC822F0AA138; // 0x0938(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_B3D481744EA043092DACC195CF6D62D6; // 0x0958(0x00B0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_B579981E4736FDF346FBC3AD6BA3E11E; // 0x0A08(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8AA5B070498FB5B77E7E76B65E259627; // 0x0AD0(0x00E0)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_F2CC5905429C79B7A27B20B75A7F0AAA; // 0x0BB0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9EBD293141785134438AB8AFD1EF1F09; // 0x0C78(0x0078)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_32B5F9BC458EE501644B6B8E47C0DF60; // 0x0CF0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8E833CB5463F7C30CC6339943B6186C8; // 0x0DB8(0x0078)()
	bool                                          IsParachuteOpen;                                   // 0x0E30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E31[0x3];                                      // 0x0E31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AimPitch;                                          // 0x0E34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeployAnimRate;                                    // 0x0E38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkydiveYaw;                                        // 0x0E3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UseDynamicsAlpha;                                  // 0x0E40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Forward;                                           // 0x0E44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Right;                                             // 0x0E48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4C[0x4];                                      // 0x0E4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   FE_IdleStart;                                      // 0x0E50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_IceQueen_Glider_AnimBP(int32 EntryPoint);
	void AnimNotify_FE_IdleStart();
	void AnimNotify_TurnONEngines();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_IceQueen_Glider_AnimBP_AnimGraphNode_BlendListByBool_2FF6C0244671D0A94B127EB3A3E9F2D0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_IceQueen_Glider_AnimBP_AnimGraphNode_BlendListByBool_A44C17B747C5420618D113B928FD4215();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_IceQueen_Glider_AnimBP_AnimGraphNode_BlendListByBool_B161E5AA45ECFAE2909BA98ADD6FB3A5();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"IceQueen_Glider_AnimBP_C">();
	}
	static class UIceQueen_Glider_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIceQueen_Glider_AnimBP_C>();
	}
};
static_assert(alignof(UIceQueen_Glider_AnimBP_C) == 0x000008, "Wrong alignment on UIceQueen_Glider_AnimBP_C");
static_assert(sizeof(UIceQueen_Glider_AnimBP_C) == 0x000E60, "Wrong size on UIceQueen_Glider_AnimBP_C");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, UberGraphFrame) == 0x0002D0, "Member 'UIceQueen_Glider_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_Root_036ECC4544D2B2C061A158AD7EFB3DD0) == 0x0002D8, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_Root_036ECC4544D2B2C061A158AD7EFB3DD0' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_Slot_C1A4FEF14C0036473F6C4BAC15E7D128) == 0x0002F8, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_Slot_C1A4FEF14C0036473F6C4BAC15E7D128' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_TransitionResult_A249F2CC4ABA096731593EAC61DD553F) == 0x000340, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_TransitionResult_A249F2CC4ABA096731593EAC61DD553F' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_TransitionResult_1AB85E27403FDB3735DF9E85CCAE7018) == 0x000368, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_TransitionResult_1AB85E27403FDB3735DF9E85CCAE7018' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_TransitionResult_BF8EE2924F1C46924B1F88B9C7F15DAA) == 0x000390, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_TransitionResult_BF8EE2924F1C46924B1F88B9C7F15DAA' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_TransitionResult_1B126B4E4AA5826ABCF90EA3B3429E51) == 0x0003B8, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_TransitionResult_1B126B4E4AA5826ABCF90EA3B3429E51' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_SequencePlayer_55C1FFC1495AAE4E9C7A9EBA5A991A58) == 0x0003E0, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_SequencePlayer_55C1FFC1495AAE4E9C7A9EBA5A991A58' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_BlendListByBool_A44C17B747C5420618D113B928FD4215) == 0x000458, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_BlendListByBool_A44C17B747C5420618D113B928FD4215' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_SequencePlayer_CA5EB3B847850C949B4431962887C8F9) == 0x0004F8, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_SequencePlayer_CA5EB3B847850C949B4431962887C8F9' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_StateResult_13C2928E43F08F60FBBAF9BC1ADAD2E5) == 0x000570, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_StateResult_13C2928E43F08F60FBBAF9BC1ADAD2E5' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_SequencePlayer_5A30459A4668E41C0948F9AF2FB4A0EF) == 0x000590, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_SequencePlayer_5A30459A4668E41C0948F9AF2FB4A0EF' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_SequencePlayer_B1B1A1E54354E29A1645CC98E0B3962C) == 0x000608, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_SequencePlayer_B1B1A1E54354E29A1645CC98E0B3962C' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_BlendListByBool_B161E5AA45ECFAE2909BA98ADD6FB3A5) == 0x000680, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_BlendListByBool_B161E5AA45ECFAE2909BA98ADD6FB3A5' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_StateResult_F647822745FD6D219E3780A203916161) == 0x000720, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_StateResult_F647822745FD6D219E3780A203916161' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_SequencePlayer_7C6AE6664D50C5AD295EDE98F66DE9F7) == 0x000740, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_SequencePlayer_7C6AE6664D50C5AD295EDE98F66DE9F7' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_BlendSpacePlayer_48E3DC1348EC3057C6F356934170B9DD) == 0x0007B8, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_BlendSpacePlayer_48E3DC1348EC3057C6F356934170B9DD' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_BlendListByBool_2FF6C0244671D0A94B127EB3A3E9F2D0) == 0x000898, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_BlendListByBool_2FF6C0244671D0A94B127EB3A3E9F2D0' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_StateResult_23EF744241BA9FE387B5DC822F0AA138) == 0x000938, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_StateResult_23EF744241BA9FE387B5DC822F0AA138' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_StateMachine_B3D481744EA043092DACC195CF6D62D6) == 0x000958, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_StateMachine_B3D481744EA043092DACC195CF6D62D6' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_ApplyAdditive_B579981E4736FDF346FBC3AD6BA3E11E) == 0x000A08, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_ApplyAdditive_B579981E4736FDF346FBC3AD6BA3E11E' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_BlendSpacePlayer_8AA5B070498FB5B77E7E76B65E259627) == 0x000AD0, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_BlendSpacePlayer_8AA5B070498FB5B77E7E76B65E259627' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_ApplyAdditive_F2CC5905429C79B7A27B20B75A7F0AAA) == 0x000BB0, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_ApplyAdditive_F2CC5905429C79B7A27B20B75A7F0AAA' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_SequencePlayer_9EBD293141785134438AB8AFD1EF1F09) == 0x000C78, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_SequencePlayer_9EBD293141785134438AB8AFD1EF1F09' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_ApplyAdditive_32B5F9BC458EE501644B6B8E47C0DF60) == 0x000CF0, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_ApplyAdditive_32B5F9BC458EE501644B6B8E47C0DF60' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AnimGraphNode_SequencePlayer_8E833CB5463F7C30CC6339943B6186C8) == 0x000DB8, "Member 'UIceQueen_Glider_AnimBP_C::AnimGraphNode_SequencePlayer_8E833CB5463F7C30CC6339943B6186C8' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, IsParachuteOpen) == 0x000E30, "Member 'UIceQueen_Glider_AnimBP_C::IsParachuteOpen' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, AimPitch) == 0x000E34, "Member 'UIceQueen_Glider_AnimBP_C::AimPitch' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, DeployAnimRate) == 0x000E38, "Member 'UIceQueen_Glider_AnimBP_C::DeployAnimRate' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, SkydiveYaw) == 0x000E3C, "Member 'UIceQueen_Glider_AnimBP_C::SkydiveYaw' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, UseDynamicsAlpha) == 0x000E40, "Member 'UIceQueen_Glider_AnimBP_C::UseDynamicsAlpha' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, Forward) == 0x000E44, "Member 'UIceQueen_Glider_AnimBP_C::Forward' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, Right) == 0x000E48, "Member 'UIceQueen_Glider_AnimBP_C::Right' has a wrong offset!");
static_assert(offsetof(UIceQueen_Glider_AnimBP_C, FE_IdleStart) == 0x000E50, "Member 'UIceQueen_Glider_AnimBP_C::FE_IdleStart' has a wrong offset!");

}

